#!/usr/bin/env python

"""Nosvideo.com Service Code"""

HTTP_HEADERS = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36'}

####################################################################################################
def MetadataObjectForURL(url):

    try:
        html = HTML.ElementFromURL(url)
    except:
        raise Ex.MediaNotAvailable

    title = html.xpath('//title/text()')
    if not title:
        raise Ex.MediaExpired

    return VideoClipObject(
        title=title[0].split(' - Nosvideo')[0].strip(),
        thumb='http://i.imgur.com/75YO83o.jpg',
        source_title='Nosvideo'
        )

####################################################################################################
def MediaObjectsForURL(url):

    return [
        MediaObject(
            container=Container.MP4,
            video_resolution='sd',
            audio_channels=2,
            optimized_for_streaming=False,
            parts=[
                PartObject(key=Callback(PlayVideo, url=url))
                ]
            )
        ]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

    reurl = Regex(r'(https?\:\/\/\w+\.\w+\/)([a-z0-9]+)').search(url)
    url = reurl.group(1) + 'vj/video.php?u=' + reurl.group(2)

    try:
        page = HTTP.Request(url, headers=HTTP_HEADERS).content
    except:
        raise Ex.MediaNotAvailable

    r = Regex(r'tracker:\s*?[\'\"]([^\'\"].+)[\'\"]').search(page)
    if r:
        vurl = String.Base64Decode(r.group(1))
        Log.Debug('* PlayVideo URL = \"%s\"' %vurl)
        h = {
            'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36',
            'Range': 'bytes=0-', 'Referer': url
            }
        Log(h)
        return IndirectResponse(VideoClipObject, key=vurl, http_headers=HTTP_HEADERS)

    raise Ex.MediaNotAvailable
