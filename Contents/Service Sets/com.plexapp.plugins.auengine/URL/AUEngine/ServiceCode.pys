#!/usr/bin/env python

"""AUEngine.com Service Code"""

RE_NORM = Regex(r'(https?://(?:www\.)?\w+\.\w+/)(?:embed\.php\?file\=|video/)(\w+)')
RE_TITLE = Regex(r'\<title\>(.+)\</title\>')
RE_THUMB = Regex(r'var *?the\_image *?\= *?["\'](http[^"\']+)')
RE_VLINK = Regex(r'var *?video\_link *?\= *?["\'](http[^"\']+(?<!m3u8|smil))')
FALLBACK = 'http://i.imgur.com/75YO83o.jpg'

####################################################################################################
def NormalizeURL(url):

    r = RE_NORM.search(url)
    return r.group(1) + 'embed.php?file=' + r.group(2) if r else url

####################################################################################################
def MetadataObjectForURL(url):

    page = get_page(url)

    title = RE_TITLE.search(page)
    if not title:
        raise Ex.MediaExpired

    rt = RE_THUMB.search(page)
    thumb = rt.group(1) if rt else FALLBACK

    return VideoClipObject(
        title=title.group(1).strip(),
        thumb=Resource.ContentsOfURLWithFallback([thumb, FALLBACK]),
        source_title='AUEngine'
        )

####################################################################################################
def MediaObjectsForURL(url):

    return [
        MediaObject(
            container=Container.MP4,
            video_codec=VideoCodec.H264,
            audio_codec=AudioCodec.AAC,
            audio_channels=2,
            optimized_for_streaming=True,
            parts=[
                PartObject(key=Callback(PlayVideo, url=url))
                ]
            )
        ]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

    r = RE_VLINK.search(get_page(url))
    if r:
        Log.Debug(u"* PlayVideo URL = {0}".format(r.group(1)))
        return IndirectResponse(VideoClipObject, key=r.group(1))

    raise Ex.MediaNotAvailable

####################################################################################################
def get_page(url):
    try:
        page = HTTP.Request(url, cacheTime=10).content
    except:
        Log.Exception(u"* Error: Cannot open '{0}' >>>".format(url))
        raise Ex.MediaNotAvailable
    return page
