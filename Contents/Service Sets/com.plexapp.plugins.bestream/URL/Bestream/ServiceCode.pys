#!/usr/bin/env python

"""Bestream.tv Service Code"""

####################################################################################################
def NormalizeURL(url):

    if '_embed.php' in url:
        r = Regex(r'(?i)(https?\:\/\/(?:www\.)?\w+\.\w+\/)[^\?]+\?.*?u\=([a-z0-9]+)').search(url)
        url = r.group(1) + r.group(2)
    return url

####################################################################################################
def MetadataObjectForURL(url):

    try:
        html = HTML.ElementFromURL(url, cacheTime=10)
    except:
        Log.Exception(u"* Error: Cannot open '{}' >>>".format(url))
        raise Ex.MediaNotAvailable

    title = html.xpath('//h1/text()')
    if not title:
        title = html.xpath('//meta[@property="og:title"]/@content')
        if title:
            title = (title[0].replace('Watch Watch', 'Watch') if title[0].startswith('Watch Watch') else title[0].lstrip('Watch')).strip()
        else:
            raise Ex.MediaExpired
    else:
        title = title[0].strip()

    data = get_data(HTTP.Request(get_embed_url(url), cacheTime=10).content)
    if 'url' not in data.keys():
        raise Ex.MediaNotAvailable

    fallback = 'http://i.imgur.com/75YO83o.jpg'
    thumb = data['thumb'] if 'thumb' in data.keys() else fallback

    return VideoClipObject(
        title=title,
        thumb=Resource.ContentsOfURLWithFallback([thumb, fallback]),
        source_title='Bestream'
        )

####################################################################################################
def MediaObjectsForURL(url):

    return [
        MediaObject(
            video_resolution='sd',
            audio_channels=2,
            optimized_for_streaming=False,
            parts=[
                PartObject(key=Callback(PlayVideo, url=url))
                ]
            )
        ]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

    try:
        page = HTTP.Request(get_embed_url(url), cacheTime=10).content
    except:
        Log.Exception(u"* Error: Cannot open '{}' >>>".format(url))
        raise Ex.MediaNotAvailable

    data = get_data(page)
    if 'url' in data.keys():
        Log.Debug(u"* PlayVideo URL = {}".format(data['url']))
        return IndirectResponse(VideoClipObject, key=data['url'])

    raise Ex.MediaNotAvailable

####################################################################################################
def get_embed_url(url):
    if '_embed.php' not in url:
        r = Regex(r'(?i)(https?\:\/\/(?:www\.)?\w+\.\w+\/)([a-z0-9]+)').search(url)
        url = r.group(1) + 'plugins/mediaplayer/site/_embed.php?u=' + r.group(2)
    return url

####################################################################################################
def get_data(page):
    data = dict()
    v = Regex(r'[\"\']?file[\"\']?\s*?\:\s*?[\"\'](http[^\"\']+(?<!m3u8|smil))[\"\']').search(page)
    if v:
        data.update({'url': v.group(1)})

    t = Regex(r'[\"\']?image[\"\']?\s*?\:\s*?[\"\'](http[^\"\']+)').search(page)
    if t:
        data.update({'thumb': t.group(1)})

    return data
