#!/usr/bin/env python

"""
Service Code for:
    BeStream.tv, FileShow.tv, TouchFile.tv,
    PicStream.tv, Putlocker.center,
    Streaming.watch, WebmFile.tv
Pull all info from 'Putlocker.center' embed page
"""

RE_NORM = Regex(r'(https?://\w+\.\w+)(?:\/plugins\/.+?u\=|\/)(\w+)')
RE_TITLE = Regex(r'["\']?title["\']? *?\: *?["\'](.+?)["\']\,')
RE_STITLE = Regex(r'https?://(?:www\.)?(\w+)\.\w+')
RE_THUMB = Regex(r'["\']?image["\']? *?\: *?["\'](http[^"\']+)["\']')
RE_DUR = Regex(r'["\']?duration["\']? *?\: *?["\'](\d+)["\']')
RE_FILE = Regex(r'["\']?file["\']? *?\: *?["\'](http[^"\']+(?<!m3u8|smil))["\']')
FALLBACK = 'http://i.imgur.com/75YO83o.jpg'

####################################################################################################
def NormalizeURL(url):

    r = RE_NORM.search(url)
    # redirect all trafic to putlocker.center
    return 'http://putlocker.center/plugins/mediaplayer/site/_embed.php?u={}'.format(r.group(2)) if r else url

####################################################################################################
def MetadataObjectForURL(url):

    page = get_page(url)

    rt = RE_TITLE.search(page)
    if not rt:
        raise Ex.MediaExpired

    rth = RE_THUMB.search(page)
    rd = RE_DUR.search(page)
    rs = RE_STITLE.search(url)

    thumb = rth.group(1) if rth else FALLBACK

    return VideoClipObject(
        title=rt.group(1).strip(),
        duration=int(rd.group(1)) * 1000 if rd else None,
        thumb=Resource.ContentsOfURLWithFallback([thumb, FALLBACK]),
        source_title=rs.group(1).title() if rs else 'PutLockerCenter'
        )

####################################################################################################
def MediaObjectsForURL(url):

    return [
        MediaObject(
            audio_channels=2,
            optimized_for_streaming=False,
            parts=[
                PartObject(key=Callback(PlayVideo, url=url))
                ]
            )
        ]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

    page = get_page(url)

    r = RE_FILE.search(page)
    if r:
        Log.Debug(u"* PlayVideo URL = {0}".format(r.group(1)))
        return IndirectResponse(VideoClipObject, key=r.group(1))

    raise Ex.MediaNotAvailable

####################################################################################################
def get_page(url):
    try:
        page = HTTP.Request(url, cacheTime=10).content
    except:
        Log.Exception(u"* Error: Cannot open '{0}' >>>".format(url))
        raise Ex.MediaNotAvailable
    return page
