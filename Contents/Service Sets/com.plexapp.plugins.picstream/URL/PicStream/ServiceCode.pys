#!/usr/bin/env python

"""PicStream.tv Service Code"""

USER_AGENT = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36'
RE_NORM = Regex(r'(https?://(?:www\.)?\w+\.\w+/)(\w+)')
RE_CTITLE1 = Regex(r'[Ww]atch +?(.+?) *?(?:[Ss]tream|$)')
RE_CTITLE2 = Regex(r' *?\- *?[Pp]ic *?[Ss]tream')
RE_URL_PASS = Regex(r'(https?://(?:www\.)?\w+\.\w+/\w+[^\?]+\?pt\=[^"\']+)')
FALLBACK = 'http://i.imgur.com/75YO83o.jpg'

####################################################################################################
def NormalizeURL(url):

    r = RE_NORM.search(url)
    return r.group(1) + r.group(2) if r else url

####################################################################################################
def MetadataObjectForURL(url):

    html = get_html(url)

    if html.xpath('//h1/text()'):
        t = html.xpath('//h1/text()')[0]
        title = (RE_CTITLE1.sub(r'\1', t) if 'Watch' in t else t).strip()
    elif html.xpath('//title/text()'):
        t = html.xpath('//title/text()')[0]
        title = (RE_CTITLE2.sub('', t) if t.endswith('- Pic Stream') else t).strip()
    else:
        raise Ex.MediaExpired

    ht = html.xpath('//a[@class="video-preview"]/@data-source')
    thumb = ht[0] if ht else FALLBACK

    return VideoClipObject(
        title=title,
        thumb=Resource.ContentsOfURLWithFallback([thumb, FALLBACK]),
        source_title='PicStream'
        )

####################################################################################################
def MediaObjectsForURL(url):

    return [
        MediaObject(
            audio_channels=2,
            optimized_for_streaming=False,
            parts=[
                PartObject(key=Callback(PlayVideo, url=url))
                ]
            )
        ]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

    vurl = get_html(url).xpath('//video/@src')
    if vurl:
        Log.Debug(u"* PlayVideo URL = {0}".format(vurl[0]))
        return IndirectResponse(VideoClipObject, key=vurl[0])

    raise Ex.MediaNotAvailable

####################################################################################################
def get_html(url):
    http_headers = {'User-Agent': USER_AGENT}
    try:
        page = HTTP.Request(url, headers=http_headers, sleep=3, cacheTime=CACHE_1MINUTE).content
        cookies = HTTP.CookiesForURL(url)
    except:
        Log.Exception(u"* Cannot open '{0}' >>>".format(url))
        raise Ex.MediaNotAvailable

    purl = RE_URL_PASS.search(page)
    if not purl:
        Log.Error('* No pass url found')
        raise Ex.MediaNotAvailable

    http_headers.update({'Referer': url, 'Cookie': cookies})
    try:
        return HTML.ElementFromURL(purl.group(1), headers=http_headers, cacheTime=CACHE_1MINUTE)
    except:
        Log.Exception(u"* Error getting html page from '{0}'".format(purl.group(1)))

    raise Ex.MediaNotAvailable
