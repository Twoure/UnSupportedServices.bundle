#!/usr/bin/env python

"""VShare.eu Service Code"""

from unpacker import unpack as Unpack

####################################################################################################
def NormalizeURL(url):

    if '/embed-' in url:
        url = url.replace('/embed-', '/').split('-')[0]

    return url

####################################################################################################
def MetadataObjectForURL(url):

    try:
        html = HTML.ElementFromURL(url)
    except:
        raise Ex.MediaNotAvailable

    title = html.xpath('//input[@name="fname"]/@value')
    if not title:
        raise Ex.MediaNotAvailable

    title = title[0]
    duration = None
    data = source_text(url)
    if data:
        data = Unpack(data.group(1))
        thumb = Regex(r'(?:\"|\')?image(?:\"|\')?\:(?:\s)?(?:\"|\')([^\"\']+)(?:\"|\')').search(data)
        rd = Regex(r'(?:\"|\')?duration(?:\"|\')?(?:\s)?\:(?:\s)?(?:\"|\')(\d+)(?:\"|\')').search(data)
        if thumb:
            thumb = thumb.group(1)
        if rd:
            duration = int(rd.group(1)) * 1000

    return VideoClipObject(
        title=title,
        thumb=thumb if thumb else 'http://i.imgur.com/75YO83o.jpg',
        duration=duration,
        source_title='VShare'
        )

####################################################################################################
def MediaObjectsForURL(url):

    return [
        MediaObject(
            video_resolution='sd',
            audio_channels=2,
            optimized_for_streaming=False,
            parts=[
                PartObject(key=Callback(PlayVideo, url=url))
                ]
            )
        ]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

    data = source_text(url)
    if data:
        data = Unpack(data.group(1))
        vurl = Regex(r'(?:\"|\')?file(?:\"|\')?(?:\s)?\:(?:\s)?(?:\"|\')(http[^\"\']+(?<!m3u8|smil))(?:\"|\')').search(data)
        if vurl:
            Log.Debug('* PlayVideo URL  = %s' %vurl.group(1))
            return IndirectResponse(VideoClipObject, key=vurl.group(1))

    raise Ex.MediaNotAvailable

####################################################################################################
def get_embed_url(url):

    r = Regex(r'(https?:\/\/(?:www\.)?vshare\.(?:[^/]+\/)?)(.*?)(?:\/|\.|$)').search(url)
    url = r.group(1) + 'embed-' + r.group(2) + '.html'

    return url

####################################################################################################
def source_text(url):

    page = HTTP.Request(get_embed_url(url)).content
    data = Regex(r"<script type=.text\/javascript.>(eval\(function\(p,a,c,k,e,.+(?:file).+\.split\('\|'\)\)\))").search(page)

    return data
