#!/usr/bin/env python

"""(Prompt, Brisk)file.com Service Code"""

USER_AGENT = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36'
RE_HASH = Regex(r'(\+)?(?:\'|")([^"\'\#)]+)(?:"|\')(\+)?')
FALLBACK = 'http://i.imgur.com/75YO83o.jpg'

####################################################################################################
def MetadataObjectForURL(url):

    try:
        html = HTML.ElementFromString(get_post_page(url))
    except:
        Log.Exception(u"* Error: Cannot open '{0}' >>>".format(url))
        raise Ex.MediaNotAvailable

    thumb = html.xpath('//img[contains(@src, "/thumbs/")]/@src')
    thumb = thumb[0] if thumb else FALLBACK

    return VideoClipObject(
        title=html.xpath('//span/@title')[0].strip(),
        thumb=Resource.ContentsOfURLWithFallback([thumb, FALLBACK]),
        source_title=url.split('/')[2].title()
        )

####################################################################################################
def MediaObjectsForURL(url):

    return [
        MediaObject(
            audio_channels=2,
            optimized_for_streaming=False,
            parts=[
                PartObject(key=Callback(PlayVideo, url=url))
                ]
            )
        ]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

    html = HTML.ElementFromString(get_post_page(url))
    http_headers = {'User-Agent': USER_AGENT, 'Referer': url}
    vurl = html.xpath('//a[@class="view_dl_link"]/@href')
    if vurl:
        try:
            vurl = vurl[0]
            page = HTTP.Request(vurl, headers=http_headers, follow_redirects=False, method='HEAD', cacheTime=10).content
        except Ex.RedirectError, e:
            if 'Location' in e.headers:
                vurl = e.headers['Location']
            if 'Set-Cookie' in e.headers:
                http_headers['Cookie'] = e.headers['Set-Cookie'].split(';')[0]

        Log.Debug(u"* PlayVideo URL = {0}".format(vurl))
        return IndirectResponse(VideoClipObject, key=vurl, http_headers=http_headers)

    raise Ex.MediaNotAvailable

####################################################################################################
def get_post_page(url):

    post_values = dict()
    http_headers = {'User-Agent': USER_AGENT}
    try:
        html = HTML.ElementFromURL(url, headers=http_headers, cacheTime=10)
    except:
        Log.Exception(u"* Error: Cannot open '{0}' >>>".format(url))
        raise Ex.MediaNotAvailable

    if html.xpath('//div[@id="not_found_msg"]'):
        message = html.xpath('//div[@id="not_found_msg"]/text()')[0]
        if 'maintenance' in message:
            Log.Warn(u"* {0}".format(message))
        else:
            Log.Warn(u"* Warning: Media expired for '{0}'".format(url))
            raise Ex.MediaExpired

    for item in html.xpath('//form[@method="post"]'):
        name = item.xpath('./input/@name')[0]
        value = item.xpath('./input/@value')[0]
        chash = value
        onclick = item.xpath('./button/@onclick')[0]
        rhash = RE_HASH.search(onclick)
        if rhash:
            r = rhash.groups()
            if r[0] == '+':
                chash = value + r[1]
            elif r[2] == '+':
                chash = r[1] + value
        post_values[name] = chash

    try:
        http_headers['Content-type'] = 'application/x-www-form-urlencoded'
        return HTTP.Request(url, values=post_values, headers=http_headers, method='POST').content
    except:
        Log.Exception(u"* Error: Cannot handle POST '{0}' >>>".format(url))
    raise Ex.MediaNotAvailable
