#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Code take from plugin IPTVPlayer: "https://gitlab.com/iptvplayer-for-e2/iptvplayer-for-e2/
# and modified for use with Plex Media Server by Twoure

from aadecode import aadecode

USER_AGENT = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36'

def decode_hiddenUrl(x, aalist):
    s = ""
    tmp = ""
    try:
        for i in list(x):
            j = ord(i)
            if (j >= 33) and (j <= 126):
                j = 33 + ((j + 14) % 94)
            s += chr(j)
    except:
        Log.Exception(u'* Cannot decode {}'.format(x))

    for item in aalist:
        try:
            tmp += aadecode(item)
        except:
            Log.Exception("* Cannot decode item >>>")

    num = Regex(r'(?i)CodeAt\(0\)\s*\+\s*([0-9]+?)[^0-9]').search(tmp)
    return s[:-1] + chr(ord(s[-1]) + int(num.group(1))) if s and num else False

def OpenloadStreamFromURL(url, http_headers=None):
    if not http_headers:
        http_headers = {'User-Agnet': USER_AGENT, 'Referer': url}

    try:
        page = HTTP.Request(url, encoding=('utf-8'), headers=http_headers, cacheTime=CACHE_1MINUTE).content
    except:
        Log.Exception(u"* Cannot Open Openload URL '{}' >>>".format(url))
        return False

    html = HTML.ElementFromString(page)
    hiddenUrl = html.xpath('//span[@id="hiddenurl"]/text()')
    aadata_list = Regex(r'(?s)<script type="text/javascript">(ﾟωﾟ.*?)</script>').findall(page)

    if hiddenUrl:
        hurl = decode_hiddenUrl(hiddenUrl[0], aadata_list)
        if hurl:
            return u'https://openload.co/stream/{0}?mime=true'.format(hurl)
        else:
            Log.Error(u'* Cannot directly decode hiddenUrl.')
    else:
        Log.Warn(u'* No hiddenUrl to decode.')

    return False
