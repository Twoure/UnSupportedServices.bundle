#!/usr/bin/env python

"""
VidABC.com Service Code
    :Pull all info from embed page
"""

from unpacker import unpack as Unpack

RE_PACKED = Regex(r"<script type=.text\/javascript.>(eval\(function\(p,a,c,k,e,.+\|file\|.+\.split\('\|'\).*?\)\))")
RE_FILE = Regex(r'[\"\']?file[\"\']?\s*?\:\s*?[\"\'](http[^\"\']+(?<!m3u8|smil))[\"\']')
RE_NORM = Regex(r'(https?:\/\/(?:www\.)?\w+\.\w+)(?:\/embed\-|\/)(\w+)')
RE_TITLE = Regex(r'[\"\']?title[\"\']?\s*?\:\s*?[\"\']([^\"\']+)[\"\']')
RE_THUMB = Regex(r'[\"\']?image[\"\']?\s*?\:\s*?[\"\'](http[^\"\']+)[\"\']')
RE_DUR = Regex(r'[\"\']?duration[\"\']?\s*?\:\s*?[\"\'](\d+)[\"\']')
FALLBACK = 'http://i.imgur.com/75YO83o.jpg'

####################################################################################################
def NormalizeURL(url):

    r = RE_NORM.search(url)
    return r.group(1) + '/' + r.group(2) + '.html' if r else url

####################################################################################################
def MetadataObjectForURL(url):

    page, html = get_page(url)

    if not RE_FILE.search(page):
        Log.Warn(u"* Warning: File missing for '{0}'".format(url))
        raise Ex.MediaExpired

    rt = RE_TITLE.search(page)
    rth = RE_THUMB.search(page)
    rd = RE_DUR.search(page)

    thumb = rth.group(1) if rth else FALLBACK
    title = rt.group(1).strip() if rt else None
    if not title:
        title = html.xpath('//h2/text()')
        if not title:
            raise Ex.MediaExpired
        title = title[0].strip()

    return VideoClipObject(
        title=title,
        duration=int(rd.group(1)) * 1000 if rd else None,
        thumb=Resource.ContentsOfURLWithFallback([thumb, FALLBACK]),
        source_title='VidABC'
        )

####################################################################################################
def MediaObjectsForURL(url):

    return [
        MediaObject(
            audio_channels=2,
            optimized_for_streaming=False,
            parts=[
                PartObject(key=Callback(PlayVideo, url=url))
                ]
            )
        ]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

    page = get_page(url)

    r = RE_FILE.search(page[0])
    if r:
        Log.Debug(u"* PlayVideo URL = {0}".format(r.group(1)))
        return IndirectResponse(VideoClipObject, key=r.group(1))

    raise Ex.MediaNotAvailable

####################################################################################################
def get_page(url):
    try:
        page = HTTP.Request(url, cacheTime=10).content
        html = HTML.ElementFromString(page)
    except:
        Log.Exception(u"* Error: Cannot access '{0}' >>>".format(url))
        raise Ex.MediaNotAvailable

    packed = RE_PACKED.search(page)
    page = Unpack(packed.group(1)) if packed else page
    return page, html
