#!/usr/bin/env python

"""Stagevu service code"""

####################################################################################################
def NormalizeURL(url):

    return url.split('?')[0]

####################################################################################################
def MetadataObjectForURL(url):

    try:
        html = HTML.ElementFromURL(url)
    except:
        raise Ex.MediaNotAvailable

    embed_node = html.xpath('//embed[@type="video/divx"]')
    if not embed_node:
        raise Ex.MediaNotAvailable

    title = embed_node[0].get('movietitle')
    thumb = embed_node[0].get('previewimage')

    return VideoClipObject(
        title=String.Unquote(title),
        thumb=thumb,
        source_title='Stagevu'
        )

####################################################################################################
def MediaObjectsForURL(url):

    return [
        MediaObject(
            video_resolution='sd',
            audio_channels=2,
            optimized_for_streaming=False,
            parts=[
                PartObject(key=Callback(PlayVideo, url=url))
                ]
            )
        ]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

    try:
        html = HTML.ElementFromURL(url)
    except:
        raise Ex.MediaNotAvailable

    vurl = html.xpath('//embed[@type="video/divx"]/@src')
    if vurl:
        Log.Debug('* PlayVideo URL  = %s' %vurl[0])
        return IndirectResponse(VideoClipObject, key=vurl[0])

    raise Ex.MediaNotAvailable
