#!/usr/bin/env python

"""FileRev.cc Service Code"""

USER_AGENT = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36'

####################################################################################################
def MetadataObjectForURL(url):

    try:
        html = HTML.ElementFromURL(url, cacheTime=10)
    except:
        Log.Exception(u"* Error: Cannot open '{0}' >>>".format(url))
        raise Ex.MediaNotAvailable

    title = html.xpath('//input[@name="fname"]/@value')
    if not title:
        raise Ex.MediaExpired

    return VideoClipObject(
        title=title[0].strip(),
        thumb='http://i.imgur.com/75YO83o.jpg',
        source_title='FileRev'
        )

####################################################################################################
def MediaObjectsForURL(url):
    """
    Final Play URL Supports direct play, but filerev host many video types,
    mainly MKV which does not support direct playback within most Plex Clients.

    For now leaving off codec and container info to force transcoding for all clients.
    """

    return [
        MediaObject(
            audio_channels=2,
            optimized_for_streaming=False,
            parts=[
                PartObject(key=Callback(PlayVideo, url=url))
                ]
            )
        ]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

    http_headers = {'User-Agent': USER_AGENT}
    try:
        html1 = HTML.ElementFromURL(url, headers=http_headers, cacheTime=10)
    except:
        Log.Exception(u"* Error: Cannot open '{0}' >>>".format(url))
        raise Ex.MediaNotAvailable

    data = dict()
    for item in html1.xpath('//input'):
        data[item.get('name')] = item.get('value')

    if data:
        http_headers['Referer'] = url
        html2 = HTML.ElementFromString(HTTP.Request(url, headers=http_headers, values=data).content)
        data.clear()

    for item in html2.xpath('//input'):
        data[item.get('name')] = item.get('value')

    if data:
        try:
            page = HTTP.Request(url, values=data, headers=http_headers, follow_redirects=False).content
            Log.Warn(u"* Warning: cannot find video URL for '{0}'".format(url))
        except Ex.RedirectError, e:
            vurl = None
            if 'Location' in e.headers:
                vurl = e.headers['Location']
            elif 'location' in e.headers:
                vurl = e.headers['location']

            if vurl:
                Log.Debug(u"* PlayVideo URL = {0}".format(vurl))
                return IndirectResponse(VideoClipObject, key=vurl)

    raise Ex.MediaNotAvailable
